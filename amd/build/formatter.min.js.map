{"version":3,"file":"formatter.min.js","sources":["../src/formatter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle modal toggle and\n * format the logs\n *\n * @copyright  2022 rajaazian <rajaazian08@gmai.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/modal_factory', 'core/templates',\n    'core/config', 'core/notification', 'core/ajax',\n    'core/str'], function ($, ModalFactory,\n                           Templates, mdlcfg,\n                           notification, ajax,\n                           str) {\n    return {\n        init: function () {\n            $(document).on('click', '.customlog-showlog', function () {\n                ajax.call([{\n                    methodname: 'local_customlog_fetch_log',\n                    args: {logid: parseInt($(this).data('id'))},\n                    done: function (res) {\n                        var logs = JSON.stringify(JSON.parse(res.logs), null, 4);\n\n                        ModalFactory.create({\n                            type: ModalFactory.types.DEFAULT,\n                            title: str.get_string('logdetails', 'local_customlog', '', 'en')\n                                .then(function (s) {\n                                    return s;\n                                }).catch(notification.exception),\n                            body: `<pre style=\"color: green; font-size: 12px;\">${logs}</pre>`,\n                        }).then(function (modal) {\n                            modal.show();\n                        });\n                    },\n                    fail: notification.exception\n                }]);\n            });\n        }\n    };\n});"],"names":["define","$","ModalFactory","Templates","mdlcfg","notification","ajax","str","init","document","on","call","methodname","args","logid","parseInt","this","data","done","res","logs","JSON","stringify","parse","create","type","types","DEFAULT","title","get_string","then","s","catch","exception","body","modal","show","fail"],"mappings":";;;;;;;AAuBAA,mCAAO,CAAC,SAAU,qBAAsB,iBACpC,cAAe,oBAAqB,YACpC,aAAa,SAAUC,EAAGC,aACHC,UAAWC,OACXC,aAAcC,KACdC,WAChB,CACHC,KAAM,WACFP,EAAEQ,UAAUC,GAAG,QAAS,sBAAsB,WAC1CJ,KAAKK,KAAK,CAAC,CACPC,WAAY,4BACZC,KAAM,CAACC,MAAOC,SAASd,EAAEe,MAAMC,KAAK,QACpCC,KAAM,SAAUC,SACRC,KAAOC,KAAKC,UAAUD,KAAKE,MAAMJ,IAAIC,MAAO,KAAM,GAEtDlB,aAAasB,OAAO,CAChBC,KAAMvB,aAAawB,MAAMC,QACzBC,MAAOrB,IAAIsB,WAAW,aAAc,kBAAmB,GAAI,MACtDC,MAAK,SAAUC,UACLA,KACRC,MAAM3B,aAAa4B,WAC1BC,2DAAqDd,iBACtDU,MAAK,SAAUK,OACdA,MAAMC,WAGdC,KAAMhC,aAAa4B"}